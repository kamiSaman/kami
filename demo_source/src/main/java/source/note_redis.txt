1、redis资料
	1> redis是一个开源的、使用C语言编写的、支持网络交互的、可基于内存也可持久化的Key-Value数据库. 官网地址:https://redis.io/ Vmware在资助着redis项目的开发和维护
	2> 下载地址：https://github.com/MicrosoftArchive/redis/releases
	3> 启动服务端：cmd命令：redis-server.exe redis.windows.conf
		1) 安装redis服务:redis-server --service-install redis.windows.conf --loglevel verbose 
		2) 启动服务：redis-server --service-start		（redis-server.exe redis.windows.conf使用指定配置文件使用下面命令启动）
		   关闭服务：redis-server --service-stop 
		3) 启动客户端：redis-cli.exe -h 127.0.0.1 -p 6379
					redis-cli.exe -h localhost -p 6379
	    4) 设置键值对:set myKey abc
		   取出键值对:get myKey
		5) 查看或设置配置项：CONFIG GET 参数名/*  	(CONFIG SET设置)
	4> 通常被称为“数据结构服务器”，相当于消息订阅系统，比如ActiveMQ、RocketMQ，如果对数据有较高一致性要求时，还是建议使用RocketMQ
	5> 特点：
		1) Redis支持数据的持久化，可以将内存中的数据保存在磁盘中，重启的时候可以再次加载进行使用。
		2) Redis不仅仅支持简单的key-value类型的数据，同时还提供list，set，zset，hash等数据结构的存储。
		3) Redis支持数据的备份，即master-slave模式的数据备份。
	6> 优势：
		1) 性能极高 		– Redis能读的速度是110000次/s,写的速度是81000次/s 。
		2) 丰富的数据类型 	– Redis支持二进制案例的 Strings, Lists, Hashes, Sets 及 Ordered Sets 数据类型操作。
		3) 原子 			– Redis的所有操作都是原子性的，意思就是要么成功执行要么失败完全不执行。单个操作是原子性的。多个操作也支持事务，即原子性，通过MULTI和EXEC指令包起来。
		4) 丰富的特性 	– Redis还支持 publish/subscribe, 通知, key 过期等等特性。
	7、使用场景：
		1) 取最新N个数据的操作
		2) 排行榜应用,取TOP N 操作
		3) 需要精确设定过期时间的应用
		4) 计数器应用
		5) Uniq操作,获取某段时间所有数据排重值
		6) 实时系统,反垃圾系统
		7) Pub/Sub构建实时消息系统8.构建队列系统
		9) 缓存
		
2、redis组成
	redis-benchmark.exe：性能测试，用以模拟同时由N个客户端发送M个 SETs/GETs 查询 (类似于 Apache 的ab 工具).
	redis-check-aof.exe：更新日志检查
	redis-check-dump.exe：本地数据库检查
	redis-cli.exe：客户端
	redis-server.exe：服务端　　
	redis.windows.conf: Redis的配置文件　　　　 
	
3、java代码中使用
	1> 前提：
		驱动jar包：https://mvnrepository.com/artifact/redis.clients/jedis
		Redis连接池jar包：http://commons.apache.org/proper/commons-pool/download_pool.cgi
	2>
	3>
	4>
	5>
	
4、常用命令
	String:
	1> incr ： 让当前键值以 1 的数量递增，并返回递增后的值
	2> incrby ： 可以指定参数一次增加的数值，并返回递增后的值 
	3> decr ： 让当前键值以 1 的数量递减 并返回递减后的值
	4> decrby ： 可以指定参数一次递减的数值，并返回递减后的值
	5> incrbyfloat 可以递增一个双精度浮点数
	6> append 作用是向键值的末尾追加 value。 如果键不存在则将该键的值设置为 value,返 回值是追加后字符串的总长度。
	7> get/set 设置/获取 key + value
	8> mget/mset 作用与 get/set 相似，不过 mget/mset 可以同时获得/设置多个键的键值 del 根据 key 来删除 value flushdb 清除当前库的所有数据
	Map:
	1> hset 存储一个哈希键值对的集合 			hset key field value
	2> hget 获取一个哈希键的值 				hget key field
	3> hmset 存储一个或多个哈希是键值对的集合	hmset key field1 value1 ......fieldN keyN
	4> hmget 获取多个指定的键的值			hmget key field1 ... fieldN
	5> hexists 判断哈希表中的字段名是否存在 如果存在返回 1 否则返回 0		hexists key field
	6> hdel 删除一个或多个字段 hdel key field
	7> hgetall 获取一个哈希是键值对的集合 hgetall key
	8> hvals 只返回字段值 hvals key
	9> hkeys 只返回字段名 hkeys key
	10>hlen 返回 key 的 hash 的元素个数 hlen key
	List:
	1> 向链表左侧添加 : lpush key value 
	2> 向链表右侧添加 : rpush key value 
	3> 从左边移出一个元素 : lpop key
	4> 从右边移出一个元素 : rpop key 
	5> 
	6> 
	7> 
	8> 
	9> 
	
	List:
	1> 
	2> 
	3> 
	4> 
	5> 
	6> 
	7> 
    8> 
    9> 
	
	List:
	1> 
	2> 
	3> 
	4> 
	5> 
	6> 
	7> 
	8> 
	9> 
	
5、edis.conf 配置项说明如下：	
	1> daemonize no						Redis默认不是以守护进程的方式运行，可以通过该配置项修改，使用yes启用守护进程（Windows 不支持守护线程的配置为 no ）
	2> pidfile /var/run/redis.pid		当Redis以守护进程方式运行时，Redis 默认会把 pid写入/var/run/redis.pid 文件，可以通过 pidfile 指定
	3> port 6379							指定Redis监听端口，默认端口为6379，作者在自己的一篇博文中解释了为什么选用6379作为默认端口，因为6379在手机按键上MERZ对应的号码，而MERZ取自意大利歌女Alessia Merz的名字
	4> bind 127.0.0.1					绑定的主机地址
	5> timeout 300						当客户端闲置多长时间后关闭连接，如果指定为0，表示关闭该功能
	6> loglevel notice					指定日志记录级别，Redis总共支持四个级别：debug、verbose、notice、warning，默认为notice
	7> logfile stdout					日志记录方式，默认为标准输出，如果配置 Redis 为守护进程方式运行，而这里又配置为日志记录方式为标准输出，则日志将会发送给 /dev/null
	8> databases 16						设置数据库的数量，默认数据库为0，可以使用SELECT命令在连接上指定数据库id
	9> save <seconds> <changes>			指定在多长时间内，有多少次更新操作，就将数据同步到数据文件，可以多个条件配合
		Redis 默认配置文件中提供了三个条件：
		save 900 1		900秒（15 分钟）内有1个更改
		save 300 10		300秒（5分钟）内有10个更改
		save 60 10000	60秒内有10000个更改
	10、rdbcompression yes				指定存储至本地数据库时是否压缩数据，默认为yes，Redis采用LZF压缩，如果为了节省CPU时间，可以关闭该选项，但会导致数据库文件变的巨大
	11、dbfilename dump.rdb				指定本地数据库文件名，默认值为 dump.rdb
	12、dir ./							指定本地数据库存放目录
	13、slaveof <mastip> <mastport>		设置当本机为slav服务时，设置master服务的IP地址及端口，在Redis启动时，它会自动从master进行数据同步
	14、masterauth <master-password>		当master服务设置了密码保护时，slav服务连接master的密码
	15、requirepass foobared				设置Redis连接密码，如果配置了连接密码，客户端在连接Redis时需要通过AUTH <password>命令提供密码，默认关闭
	16、 maxclients 128					设置同一时间最大客户端连接数，默认无限制，Redis可以同时打开的客户端连接数为Redis进程可以打开的最大文件描述符数，如果设置maxclients 0，表示不作限制。
										当客户端连接数到达限制时，Redis会关闭新的连接并向客户端返回max number of clients reached错误信息
	17、maxmemory <bytes>				指定Redis最大内存限制，Redis在启动时会把数据加载到内存中，达到最大内存后，Redis 会先尝试清除已到期或即将到期的Key.
										当此方法处理后，仍然到达最大内存设置，将无法再进行写入操作，但仍然可以进行读取操作。Redis新的vm机制，会把Key存放内存，Value会存放在swap区
	18、appendonly no					指定是否在每次更新操作后进行日志记录，Redis在默认情况下是异步的把数据写入磁盘，如果不开启，可能会在断电时导致一段时间内的数据丢失。
										因为redis本身同步数据文件是按上面save条件来同步的，所以有的数据会在一段时间内只存在于内存中。默认为no
	19、appendfilename appendonly.aof	指定更新日志文件名，默认为appendonly.aof
	20、appendfsync everysec				指定更新日志条件，共有3个可选值：
		no			表示等操作系统进行数据缓存同步到磁盘（快）
		always		表示每次更新操作后手动调用fsync()将数据写到磁盘（慢，安全）
		everysec	表示每秒同步一次（折中，默认值）
	21、vm-enabled no					指定是否启用虚拟内存机制，默认值为no，简单的介绍一下，VM机制将数据分页存放，由Redis将访问量较少的页即冷数据swap到磁盘上，访问多的页面由磁盘自动换出到内存中（在后面的文章我会仔细分析Redis的VM机制）
	22、vm-swap-file /tmp/redis.swap		虚拟内存文件路径，默认值为/tmp/redis.swap，不可多个Redis实例共享
	23、vm-max-memory 0					将所有大于vm-max-memory的数据存入虚拟内存，无论vm-max-memory设置多小，所有索引数据都是内存存储的(Redis的索引数据就是keys),即当vm-max-memory设置为0的时候，所有value都存在于磁盘。默认值为0
	24、vm-page-size 32					Redis的swap文件分成了很多的page，一个对象可以保存在多个page上面，但一个page上不能被多个对象共享，vm-page-size是要根据存储的数据大小来设定的
										作者建议如果存储很多小对象，page大小最好设置为32或者64bytes；如果存储很大大对象，则可以使用更大的page，如果不确定，就使用默认值
	25、vm-pages 134217728				设置swap文件中的page数量，由于页表（一种表示页面空闲或使用的bitmap）是在放在内存中的，在磁盘上每 8 个 pages 将消耗 1byte 的内存。
	26、vm-max-threads 4					设置访问swap文件的线程数,最好不要超过机器的核数,如果设置为0,那么所有对swap文件的操作都是串行的，可能会造成比较长时间的延迟。默认值为4
	27、glueoutputbuf yes				设置在向客户端应答时，是否把较小的包合并为一个包发送，默认为开启
	28、hash-max-zipmap-entries 64		指定在超过一定的数量或者最大的元素超过某一临界值时，采用一种特殊的哈希算法
	   hash-max-zipmap-value 512	
	29、activerehashing yes				指定是否激活重置哈希，默认为开启（后面在介绍 Redis 的哈希算法时具体介绍）
	30、include /path/to/local.conf		指定包含其它的配置文件，可以在同一主机上多个Redis实例之间使用同一份配置文件，而同时各个实例又拥有自己的特定配置文件
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	